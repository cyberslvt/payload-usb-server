<!DOCTYPE html>
<html>
<head>
  <%- include ("../partials/header.ejs") %>

  <style>
    html, body {
      height: 100%;
    }

    body {
      display: -ms-flexbox;
      display: -webkit-box;
      display: flex;
      -ms-flex-align: center;
      -ms-flex-pack: center;
      -webkit-box-align: center;
      align-items: center;
      -webkit-box-pack: center;
      justify-content: center;
      padding-top: 40px;
      padding-bottom: 40px;
      background-color: #f5f5f5;
    }

    .form-pair {
      width: 100%;
      max-width: 330px;
      padding: 15px;
      margin: 0 auto;
    }

    .form-pair .checkbox {
      font-weight: 400;
    }

    .form-pair .form-control {
      position: relative;
      box-sizing: border-box;
      height: auto;
      padding: 10px;
      font-size: 16px;
    }

    .form-pair .form-control:focus {
      z-index: 2;
    }

    #inputId {
      margin-bottom: 0px;
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }

    #inputName {
      margin-bottom: 10px;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }

    .pair-alert {
        display: block;
        left: 0;
        margin: auto;
        text-align: center;
        width: 80%;
        z-index: 1;
        position: absolute;
        right: 0;
        bottom: 40px;
    }
  </style>
</head>

<body class="text-center">

  <%- include ("../partials/nav.ejs") %>

    <form id="pair-form" class="form-pair">
      <h1 class="h3 mb-3 font-weight-normal">Pair new device</h1>
      <label for="inputId" class="sr-only">Pair ID</label>
      <input type="text" id="inputId" class="form-control" placeholder="ID" required="" autofocus="" autocomplete="off">
      <label for="inputName" class="sr-only">Friendly Name</label>
      <input type="text" id="inputName" class="form-control" placeholder="Name" required="" autocomplete="off">
      <button class="btn btn-lg btn-primary btn-block" type="submit">Pair</button>
    </form>

    <div id="pair-success-alert" class="alert alert-success center-block pair-alert" role="alert" style="display: none;">
        Successfully paired device. <a id="success-alert-link" href="/device?id=" class="alert-link">Connect</a>
        <button type="button" class="close" onclick="closeAlerts()">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <div id="pair-fail-alert" class="alert alert-danger center-block pair-alert" role="alert" style="display: none;">
        Failed to pair device
        <button type="button" class="close" onclick="closeAlerts()">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <script type="text/javascript" src="/js/utils.js"></script>
    <script src="https://cdn.socket.io/4.5.0/socket.io.min.js" integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k" crossorigin="anonymous"></script>
    <script>
        var socket = io();

        function success(deviceId) {
            $('#pair-fail-alert').fadeOut();
            $('#pair-success-alert').fadeIn();

            $('#success-alert-link').attr("href", `/device?id=${deviceId}`);
        }

        function fail(msg) {
            $('#pair-success-alert').fadeOut();
            $('#pair-fail-alert').fadeIn();

            $('#pair-fail-alert').html(`Failed to pair device - '${msg}' <button type="button" class="close" onclick="closeAlerts()"><span aria-hidden="true">&times;</span></button>`);
        }

        function closeAlerts(){
            $('#pair-success-alert').fadeOut();
            $('#pair-fail-alert').fadeOut();
        }

        close();

        function processForm(e) {
            if (e.preventDefault) e.preventDefault();

            var id = $('#inputId').val();
            var name = $('#inputName').val();

            if(!stringValidation(id) || id == "") {fail("Id is not valid. (None of these characters '<>,.\"';:{}%$=+`' are allowed)"); return false;}
            if(!stringValidation(name) || name == "") {fail("Name is not valid. (None of these characters '<>,.\"';:{}%$=+`' are allowed)"); return false;}

            if(localStorage.getItem("device-list") != null){
                const devices = JSON.parse(localStorage.getItem("device-list"));
                let i = 0;
                let found = -1;
                devices.forEach(listing => {
                    if (listing.name == name) {
                        found = i;
                    }
                    i++;
                });
                if (found > -1){
                    fail("Name is already used."); return false;
                }

                found = -1;
                devices.forEach(listing => {
                    if (listing.id == id) {
                        found = i;
                    }
                    i++;
                });
                if (found > -1){
                    fail("Id is already paired."); return false;
                }
            }

            socket.emit("isDeviceConnected", id, (connected) => {
                if(connected){
                    if(localStorage.getItem("device-list") != null){
                        const devices = JSON.parse(localStorage.getItem("device-list"));
                        devices.push({name:name,id:id});
                        localStorage.setItem("device-list", JSON.stringify(devices));
                        window.location.href = "/device?id=" + id;
                    }
                } else {
                    fail("Device is not connected.");
                }
            });

            return false;
        }

        socket.on("connect", () => {
            $('#pair-form').on('submit', processForm);
        });
    </script>

</body>
</html>
